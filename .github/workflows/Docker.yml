name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

# SECOND STEP
env:
  IMAGE_NAME: azurecontainerswebsite
  IMAGE_TAG: ${{ github.run_id }}
#---
# THIRD STEP
  ACR_NAME: azurecontainerswebsite.azurecr.io
#---

jobs:
    
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: AzureContainersWebsite

    steps:
    - uses: actions/checkout@v2
      
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $IMAGE_NAME:$IMAGE_TAG

# SECOND STEP: PUBLISH AS ARTIFACT
    - name: Save Image as Tar
      run: docker save -o ${{ format('{0}/{1}.tar', github.workspace, env.IMAGE_NAME) }} $IMAGE_NAME:$IMAGE_TAG

    - name: Upload Image as Build Artifact
      uses: actions/upload-artifact@v2.2.2
      with:      
        name: ACWImage
        path:  ${{ format('{0}/{1}.tar', github.workspace, env.IMAGE_NAME) }}

# THIRD STEP: DEPLOY TO DEV
  deploy-to-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: build-image
    environment:
      name: Dev
      url: http://azurecontainers.azurewebsites.net
    
    steps:   
    - name: Download Image from Build Artifact
      id: downloadimage
      uses: actions/download-artifact@v2.0.8
      with:
        name: ACWImage
               
    - name: Rehidrate the Image
      run: docker load -i ${{ format('{0}/{1}.tar', steps.downloadimage.outputs.download-path, env.IMAGE_NAME) }}
      
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username: AzureContainersWebsite
        password: ${{ secrets.ACRPASSWORD }}
        login-server: ${{ env.ACR_NAME }}
        
    - name: Re-Tag image for ACR
      run: docker tag $IMAGE_NAME:$IMAGE_TAG $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG
      
    - name: Push image to ACR
      run: docker image push $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG
      
# STEP 4
    - name: Azure Login
      uses: Azure/login@v1
      with:       
        # az ad sp create-for-rbac --name "{sp-name}" --sdk-auth
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Deploy to Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        app-name: azurecontainers       
        images: $${{ format('{0}/{1}:{2}'), env.ACR_NAME, env.IMAGE_NAME, env.IMAGE_TAG }}
